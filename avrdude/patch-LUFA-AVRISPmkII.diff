From 019365ae6f007a7084a974072551cc9c258e0900 Mon Sep 17 00:00:00 2001
From: Mateusz Szafraniec <android@szafraniec.net.pl>
Date: Fri, 10 Apr 2015 09:58:57 +0200
Subject: [PATCH] avrprog MKII patch

---
 avrdude/jtagmkII.c   | 42 ++++++++++++++++++-------------------
 avrdude/stk500v2.c   | 26 +++++++++++------------
 avrdude/usb_libusb.c | 58 +++++++++++++++++++++++++++++++++-------------------
 avrdude/usbdevs.h    |  6 ------
 4 files changed, 71 insertions(+), 61 deletions(-)

diff --git a/avrdude/jtagmkII.c b/avrdude/jtagmkII.c
index 78c412c..c9ef6ae 100644
--- a/avrdude/jtagmkII.c
+++ b/avrdude/jtagmkII.c
@@ -1507,9 +1507,9 @@ static int jtagmkII_open(PROGRAMMER * pgm, char * port)
     pinfo.usbinfo.vid = USB_VENDOR_ATMEL;
     pinfo.usbinfo.flags = 0;
     pinfo.usbinfo.pid = USB_DEVICE_JTAGICEMKII;
-    pgm->fd.usb.max_xfer = USBDEV_MAX_XFER_MKII;
-    pgm->fd.usb.rep = USBDEV_BULK_EP_READ_MKII;
-    pgm->fd.usb.wep = USBDEV_BULK_EP_WRITE_MKII;
+    pgm->fd.usb.max_xfer = 0;
+    pgm->fd.usb.rep = -1;
+    pgm->fd.usb.wep = -1;
     pgm->fd.usb.eep = 0;           /* no seperate EP for events */
 #else
     avrdude_message(MSG_INFO, "avrdude was compiled without usb support.\n");
@@ -1559,9 +1559,9 @@ static int jtagmkII_open_dw(PROGRAMMER * pgm, char * port)
     pinfo.usbinfo.vid = USB_VENDOR_ATMEL;
     pinfo.usbinfo.flags = 0;
     pinfo.usbinfo.pid = USB_DEVICE_JTAGICEMKII;
-    pgm->fd.usb.max_xfer = USBDEV_MAX_XFER_MKII;
-    pgm->fd.usb.rep = USBDEV_BULK_EP_READ_MKII;
-    pgm->fd.usb.wep = USBDEV_BULK_EP_WRITE_MKII;
+    pgm->fd.usb.max_xfer = 0;
+    pgm->fd.usb.rep = -1;
+    pgm->fd.usb.wep = -1;
     pgm->fd.usb.eep = 0;           /* no seperate EP for events */
 #else
     avrdude_message(MSG_INFO, "avrdude was compiled without usb support.\n");
@@ -1611,9 +1611,9 @@ static int jtagmkII_open_pdi(PROGRAMMER * pgm, char * port)
     pinfo.usbinfo.vid = USB_VENDOR_ATMEL;
     pinfo.usbinfo.flags = 0;
     pinfo.usbinfo.pid = USB_DEVICE_JTAGICEMKII;
-    pgm->fd.usb.max_xfer = USBDEV_MAX_XFER_MKII;
-    pgm->fd.usb.rep = USBDEV_BULK_EP_READ_MKII;
-    pgm->fd.usb.wep = USBDEV_BULK_EP_WRITE_MKII;
+    pgm->fd.usb.max_xfer = 0;
+    pgm->fd.usb.rep = -1;
+    pgm->fd.usb.wep = -1;
     pgm->fd.usb.eep = 0;           /* no seperate EP for events */
 #else
     avrdude_message(MSG_INFO, "avrdude was compiled without usb support.\n");
@@ -1664,9 +1664,9 @@ static int jtagmkII_dragon_open(PROGRAMMER * pgm, char * port)
     pinfo.usbinfo.vid = USB_VENDOR_ATMEL;
     pinfo.usbinfo.flags = 0;
     pinfo.usbinfo.pid = USB_DEVICE_AVRDRAGON;
-    pgm->fd.usb.max_xfer = USBDEV_MAX_XFER_MKII;
-    pgm->fd.usb.rep = USBDEV_BULK_EP_READ_MKII;
-    pgm->fd.usb.wep = USBDEV_BULK_EP_WRITE_MKII;
+    pgm->fd.usb.max_xfer = 0;
+    pgm->fd.usb.rep = -1;
+    pgm->fd.usb.wep = -1;
     pgm->fd.usb.eep = 0;           /* no seperate EP for events */
 #else
     avrdude_message(MSG_INFO, "avrdude was compiled without usb support.\n");
@@ -1717,9 +1717,9 @@ static int jtagmkII_dragon_open_dw(PROGRAMMER * pgm, char * port)
     pinfo.usbinfo.vid = USB_VENDOR_ATMEL;
     pinfo.usbinfo.flags = 0;
     pinfo.usbinfo.pid = USB_DEVICE_AVRDRAGON;
-    pgm->fd.usb.max_xfer = USBDEV_MAX_XFER_MKII;
-    pgm->fd.usb.rep = USBDEV_BULK_EP_READ_MKII;
-    pgm->fd.usb.wep = USBDEV_BULK_EP_WRITE_MKII;
+    pgm->fd.usb.max_xfer = 0;
+    pgm->fd.usb.rep = -1;
+    pgm->fd.usb.wep = -1;
     pgm->fd.usb.eep = 0;           /* no seperate EP for events */
 #else
     avrdude_message(MSG_INFO, "avrdude was compiled without usb support.\n");
@@ -1770,9 +1770,9 @@ static int jtagmkII_dragon_open_pdi(PROGRAMMER * pgm, char * port)
     pinfo.usbinfo.vid = USB_VENDOR_ATMEL;
     pinfo.usbinfo.flags = 0;
     pinfo.usbinfo.pid = USB_DEVICE_AVRDRAGON;
-    pgm->fd.usb.max_xfer = USBDEV_MAX_XFER_MKII;
-    pgm->fd.usb.rep = USBDEV_BULK_EP_READ_MKII;
-    pgm->fd.usb.wep = USBDEV_BULK_EP_WRITE_MKII;
+    pgm->fd.usb.max_xfer = 0;
+    pgm->fd.usb.rep = -1;
+    pgm->fd.usb.wep = -1;
     pgm->fd.usb.eep = 0;           /* no seperate EP for events */
 #else
     avrdude_message(MSG_INFO, "avrdude was compiled without usb support.\n");
@@ -3347,9 +3347,9 @@ static int jtagmkII_open32(PROGRAMMER * pgm, char * port)
     pinfo.usbinfo.vid = USB_VENDOR_ATMEL;
     pinfo.usbinfo.flags = 0;
     pinfo.usbinfo.pid = USB_DEVICE_JTAGICEMKII;
-    pgm->fd.usb.max_xfer = USBDEV_MAX_XFER_MKII;
-    pgm->fd.usb.rep = USBDEV_BULK_EP_READ_MKII;
-    pgm->fd.usb.wep = USBDEV_BULK_EP_WRITE_MKII;
+    pgm->fd.usb.max_xfer = 0;
+    pgm->fd.usb.rep = -1;
+    pgm->fd.usb.wep = -1;
     pgm->fd.usb.eep = 0;           /* no seperate EP for events */
 #else
     avrdude_message(MSG_INFO, "avrdude was compiled without usb support.\n");
diff --git a/avrdude/stk500v2.c b/avrdude/stk500v2.c
index 5f1f79e..b9963f1 100644
--- a/avrdude/stk500v2.c
+++ b/avrdude/stk500v2.c
@@ -1640,9 +1640,9 @@ static int stk500v2_open(PROGRAMMER * pgm, char * port)
     pinfo.usbinfo.pid = USB_DEVICE_AVRISPMKII;
     PDATA(pgm)->pgmtype = PGMTYPE_AVRISP_MKII;
     pgm->set_sck_period = stk500v2_set_sck_period_mk2;
-    pgm->fd.usb.max_xfer = USBDEV_MAX_XFER_MKII;
-    pgm->fd.usb.rep = USBDEV_BULK_EP_READ_MKII;
-    pgm->fd.usb.wep = USBDEV_BULK_EP_WRITE_MKII;
+    pgm->fd.usb.max_xfer = 0;
+    pgm->fd.usb.rep = -1;
+    pgm->fd.usb.wep = -1;
     pgm->fd.usb.eep = 0;           /* no seperate EP for events */
 #else
     avrdude_message(MSG_INFO, "avrdude was compiled without usb support.\n");
@@ -1698,7 +1698,7 @@ static int stk600_open(PROGRAMMER * pgm, char * port)
     pinfo.usbinfo.pid = USB_DEVICE_STK600;
     PDATA(pgm)->pgmtype = PGMTYPE_STK600;
     pgm->set_sck_period = stk600_set_sck_period;
-    pgm->fd.usb.max_xfer = USBDEV_MAX_XFER_MKII;
+    pgm->fd.usb.max_xfer = 0;
     pgm->fd.usb.rep = USBDEV_BULK_EP_READ_STK600;
     pgm->fd.usb.wep = USBDEV_BULK_EP_WRITE_STK600;
     pgm->fd.usb.eep = 0;           /* no seperate EP for events */
@@ -3400,9 +3400,9 @@ static int stk500v2_jtagmkII_open(PROGRAMMER * pgm, char * port)
     pinfo.usbinfo.vid = USB_VENDOR_ATMEL;
     pinfo.usbinfo.flags = 0;
     pinfo.usbinfo.pid = USB_DEVICE_JTAGICEMKII;
-    pgm->fd.usb.max_xfer = USBDEV_MAX_XFER_MKII;
-    pgm->fd.usb.rep = USBDEV_BULK_EP_READ_MKII;
-    pgm->fd.usb.wep = USBDEV_BULK_EP_WRITE_MKII;
+    pgm->fd.usb.max_xfer = 0;
+    pgm->fd.usb.rep = -1;
+    pgm->fd.usb.wep = -1;
     pgm->fd.usb.eep = 0;           /* no seperate EP for events */
 #else
     avrdude_message(MSG_INFO, "avrdude was compiled without usb support.\n");
@@ -3511,9 +3511,9 @@ static int stk500v2_dragon_isp_open(PROGRAMMER * pgm, char * port)
     pinfo.usbinfo.vid = USB_VENDOR_ATMEL;
     pinfo.usbinfo.flags = 0;
     pinfo.usbinfo.pid = USB_DEVICE_AVRDRAGON;
-    pgm->fd.usb.max_xfer = USBDEV_MAX_XFER_MKII;
-    pgm->fd.usb.rep = USBDEV_BULK_EP_READ_MKII;
-    pgm->fd.usb.wep = USBDEV_BULK_EP_WRITE_MKII;
+    pgm->fd.usb.max_xfer = 0;
+    pgm->fd.usb.rep = -1;
+    pgm->fd.usb.wep = -1;
     pgm->fd.usb.eep = 0;           /* no seperate EP for events */
 #else
     avrdude_message(MSG_INFO, "avrdude was compiled without usb support.\n");
@@ -3589,9 +3589,9 @@ static int stk500v2_dragon_hv_open(PROGRAMMER * pgm, char * port)
     pinfo.usbinfo.vid = USB_VENDOR_ATMEL;
     pinfo.usbinfo.flags = 0;
     pinfo.usbinfo.pid = USB_DEVICE_AVRDRAGON;
-    pgm->fd.usb.max_xfer = USBDEV_MAX_XFER_MKII;
-    pgm->fd.usb.rep = USBDEV_BULK_EP_READ_MKII;
-    pgm->fd.usb.wep = USBDEV_BULK_EP_WRITE_MKII;
+    pgm->fd.usb.max_xfer = 0;
+    pgm->fd.usb.rep = -1;
+    pgm->fd.usb.wep = -1;
     pgm->fd.usb.eep = 0;           /* no seperate EP for events */
 #else
     avrdude_message(MSG_INFO, "avrdude was compiled without usb support.\n");
diff --git a/avrdude/usb_libusb.c b/avrdude/usb_libusb.c
index ff1f6b9..72933c2 100644
--- a/avrdude/usb_libusb.c
+++ b/avrdude/usb_libusb.c
@@ -104,9 +104,6 @@ static int usbdev_open(char * port, union pinfo pinfo, union filedescriptor *fd)
 	}
     }
 
-  if (fd->usb.max_xfer == 0)
-    fd->usb.max_xfer = USBDEV_MAX_XFER_MKII;
-
   usb_init();
 
   usb_find_busses();
@@ -239,43 +236,62 @@ static int usbdev_open(char * port, union pinfo pinfo, union filedescriptor *fd)
 		    }
 
 		  fd->usb.handle = udev;
-		  if (fd->usb.rep == 0)
+		  if (fd->usb.rep < 0)
 		    {
 		      /* Try finding out what our read endpoint is. */
 		      for (i = 0; i < dev->config[0].interface[iface].altsetting[0].bNumEndpoints; i++)
 			{
-			  int possible_ep = dev->config[0].interface[iface].altsetting[0].
-			  endpoint[i].bEndpointAddress;
+			  int possible_ep = dev->config[0].interface[iface].altsetting[0].endpoint[i].bEndpointAddress;
+			  int possible_ep_size = dev->config[0].interface[iface].altsetting[0].endpoint[i].wMaxPacketSize;
 
 			  if ((possible_ep & USB_ENDPOINT_DIR_MASK) != 0)
 			    {
-                              avrdude_message(MSG_NOTICE2, "%s: usbdev_open(): using read endpoint 0x%02x\n",
+				  avrdude_message(MSG_NOTICE2, "%s: usbdev_open(): using read endpoint 0x%02x\n",
                                                   progname, possible_ep);
 			      fd->usb.rep = possible_ep;
+				  //Take smaller endpoint size as max
+				  if ((fd->usb.max_xfer == 0) || (possible_ep_size < fd->usb.max_xfer))
+				  {
+				    fd->usb.max_xfer = possible_ep_size;
+				  }
 			      break;
 			    }
 			}
-		      if (fd->usb.rep == 0)
+		      if (fd->usb.rep < 0)
 			{
-			  avrdude_message(MSG_INFO, "%s: usbdev_open(): cannot find a read endpoint, using 0x%02x\n",
-                                          progname, USBDEV_BULK_EP_READ_MKII);
-			  fd->usb.rep = USBDEV_BULK_EP_READ_MKII;
+			  avrdude_message(MSG_INFO, "%s: usbdev_open(): ERROR: cannot find a read endpoint",
+                                          progname);
 			}
 		    }
-		  for (i = 0; i < dev->config[0].interface[iface].altsetting[0].bNumEndpoints; i++)
+
+		  if (fd->usb.wep < 0)
 		    {
-		      if ((dev->config[0].interface[iface].altsetting[0].endpoint[i].bEndpointAddress == fd->usb.rep ||
-			   dev->config[0].interface[iface].altsetting[0].endpoint[i].bEndpointAddress == fd->usb.wep) &&
-			  dev->config[0].interface[iface].altsetting[0].endpoint[i].wMaxPacketSize < fd->usb.max_xfer)
+		      /* Try finding out what our write endpoint is. */
+		      for (i = 0; i < dev->config[0].interface[iface].altsetting[0].bNumEndpoints; i++)
+			{
+			  int possible_ep = dev->config[0].interface[iface].altsetting[0].endpoint[i].bEndpointAddress;
+			  int possible_ep_size = dev->config[0].interface[iface].altsetting[0].endpoint[i].wMaxPacketSize;
+
+			  if ((possible_ep & USB_ENDPOINT_DIR_MASK) == 0)
+			    {
+				  avrdude_message(MSG_NOTICE2, "%s: usbdev_open(): using write endpoint 0x%02x\n",
+                                                  progname, possible_ep);
+			      fd->usb.wep = possible_ep;
+				  //Take smaller endpoint size as max
+				  if ((fd->usb.max_xfer == 0) || (possible_ep_size < fd->usb.max_xfer))
+				  {
+				    fd->usb.max_xfer = possible_ep_size;
+				  }
+			      break;
+			    }
+			}
+		      if (fd->usb.wep < 0)
 			{
-                          avrdude_message(MSG_NOTICE, "%s: max packet size expected %d, but found %d due to EP 0x%02x's wMaxPacketSize\n",
-                                            progname,
-                                            fd->usb.max_xfer,
-                                            dev->config[0].interface[iface].altsetting[0].endpoint[i].wMaxPacketSize,
-                                            dev->config[0].interface[iface].altsetting[0].endpoint[i].bEndpointAddress);
-			  fd->usb.max_xfer = dev->config[0].interface[iface].altsetting[0].endpoint[i].wMaxPacketSize;
+			  avrdude_message(MSG_INFO, "%s: usbdev_open(): ERROR: cannot find a write endpoint",
+                                          progname);
 			}
 		    }
+		 
 		  if (pinfo.usbinfo.flags & PINFO_FL_USEHID)
 		    {
 		      if (usb_control_msg(udev, 0x21, 0x0a /* SET_IDLE */, 0, 0, NULL, 0, 100) < 0)
diff --git a/avrdude/usbdevs.h b/avrdude/usbdevs.h
index a3bc413..b76d775 100644
--- a/avrdude/usbdevs.h
+++ b/avrdude/usbdevs.h
@@ -55,12 +55,6 @@
 #define USBTINY_PRODUCT_DEFAULT 0x0C9F
 
 
-
-/* JTAGICEmkII, AVRISPmkII */
-#define USBDEV_BULK_EP_WRITE_MKII 0x02
-#define USBDEV_BULK_EP_READ_MKII  0x82
-#define USBDEV_MAX_XFER_MKII 64
-
 /* STK600 */
 #define USBDEV_BULK_EP_WRITE_STK600 0x02
 #define USBDEV_BULK_EP_READ_STK600 0x83
-- 
2.9.0.windows.1

